{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///preload.min.js","webpack:///webpack/bootstrap 0bd89aba2a6d302649b7","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","preload","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","_len","arguments","length","images","Array","_key","Promise","reject","Error","EMPTY_PARAMS_ERROR_MESSAGE","image","checkAndPrepareImage","all","preloadHTMLImageElement","reflected","map","value","_typeof","Symbol","iterator","obj","constructor","STATE_NEW","STATE_LOADED","STATE_FAILED","TYPE_ERROR_MESSAGE","HTMLImageElement","TypeError","src","url","Image","resolve","onLoad","state","naturalWidth","complete","onError","addEventListener"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,aAAAH,GACA,gBAAAC,SACAA,QAAAI,QAAAL,IAEAD,EAAAM,QAAAL,KACC,mBAAAM,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAE,EAAAF,EACAG,KACAZ,WAUA,OANAO,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,KAGAX,EAAAD,QAvBA,GAAAU,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GACAK,gBACAC,cACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAxB,GACA,GAAAiB,GAAAjB,KAAAyB,WACA,WAA2B,MAAAzB,GAAA0B,SAC3B,WAAiC,MAAA1B,GAEjC,OADAO,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAS,EAAAC,GAAsD,MAAAT,QAAAU,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,GAGAxB,IAAAyB,EAAA,KDgBM,SAAUhC,EAAQD,EAASQ,GAEjC,YE2Be,SAASJ,KAAmB,OAAA8B,GAAAC,UAAAC,OAARC,EAAQC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAARF,EAAQE,GAAAJ,UAAAI,EACzC,IAAsB,IAAlBF,EAAOD,OACT,MAAOI,SAAQC,OAAO,GAAIC,OAAMC,GAGlC,IAAsB,IAAlBN,EAAOD,OAAc,CACvB,GAAMQ,GAAQC,EAAqBR,EAAO,GAE1C,OAAOG,SAAQM,KACbC,EAAwBH,KAK5B,GAAMI,GAAYX,EAAOY,IAAI,SAAAL,GAAA,MAC3BG,GACEF,EAAqBD,KAIzB,OAAOJ,SAAQM,IAAIE,GF5CrB5B,OAAOC,eAAerB,EAAS,cAC7BkD,UAGF,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOtB,UAAY,eAAkBwB,GAEtQtD,GAAQ2B,QEkBgBvB,CAzGjB,IAAMoD,eAAY,MACZC,iBAAe,SACfC,iBAAe,SAGff,gIAEAgB,4FAQPd,EAAuB,SAACD,GAE5B,gBAAeA,EAAf,YAAAO,EAAeP,IAEb,IAAK,SACGA,YAAiBgB,mBACrBpB,QAAQC,OAAO,GAAIoB,WAAUF,aAEpBf,EAAMkB,MACflB,EAAMkB,IAAM,GAEd,MAEF,KAAK,SACH,GAAIC,GAAMnB,CAGVA,GAAQ,GAAIoB,OACZpB,EAAMkB,IAAMC,CACZ,MAEF,SACEvB,QAAQC,OAAO,GAAIoB,WAAUF,IAGjC,MAAOf,IAQHG,EAA0B,SAACH,GAAD,MAC9B,IAAIJ,SAAQ,SAACyB,EAASxB,GAEF,KAAdG,EAAMkB,KACRrB,GAAQG,EAAOY,GAGjB,IAAMU,GAAS,WAEb,GAAIC,GAAQX,CAGRZ,GAAMwB,eACRD,EAAQV,EAERQ,GAASrB,EAAOuB,KAIdvB,EAAMyB,WACRF,EAAQT,EAERjB,GAAQG,EAAOuB,MAIbG,EAAU,WACd7B,GAAQG,EAAOc,IAIjBd,GAAM2B,iBAAiB,OAAQL,GAC/BtB,EAAM2B,iBAAiB,QAASD","file":"preload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"preload\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"preload\"] = factory();\n\telse\n\t\troot[\"preload\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"preload\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"preload\"] = factory();\n\telse\n\t\troot[\"preload\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = preload;\n// Possible state for HTMLImageElement\nvar STATE_NEW = exports.STATE_NEW = 'new'; // for all new Image() without src\nvar STATE_LOADED = exports.STATE_LOADED = 'loaded'; // for resolved and loaded images\nvar STATE_FAILED = exports.STATE_FAILED = 'failed'; // for rejected images\n\n// Errors messages for pretty errors in runtime\nvar EMPTY_PARAMS_ERROR_MESSAGE = exports.EMPTY_PARAMS_ERROR_MESSAGE = 'Empty params: \\n  you can pass an image/images and it must be URL (string) or HTMLImageElement';\nvar TYPE_ERROR_MESSAGE = exports.TYPE_ERROR_MESSAGE = 'Incorrect params: \\n  image must be URL string or HTMLImageElement';\n\n/**\n * Check type of image and prepare it if string.\n * @param {String|HTMLImageElement} image String(URL) or HTMLImageElement.\n * @return {HTMLImageElement}\n */\nvar checkAndPrepareImage = function checkAndPrepareImage(image) {\n  // Check for type errors\n  switch (typeof image === 'undefined' ? 'undefined' : _typeof(image)) {\n    // Accept only HTMLImageElement interface\n    case 'object':\n      if (!(image instanceof HTMLImageElement)) {\n        Promise.reject(new TypeError(TYPE_ERROR_MESSAGE));\n      }\n      if (typeof image.src === 'undefined') {\n        image.src = '';\n      }\n      break;\n    // and string\n    case 'string':\n      var url = image;\n\n      // Create a new img from HTML5 constructor and set src\n      image = new Image();\n      image.src = url;\n      break;\n    // otherwise throw error\n    default:\n      Promise.reject(new TypeError(TYPE_ERROR_MESSAGE));\n  }\n\n  return image;\n};\n\n/**\n * Preload image.\n * @param {HTMLImageElement} image HTMLImageElement.\n * @return {Promise}\n */\nvar preloadHTMLImageElement = function preloadHTMLImageElement(image) {\n  return new Promise(function (resolve, reject) {\n    // If image doesn't have src reject with 'new' state\n    if (image.src === '') {\n      reject([image, STATE_NEW]);\n    }\n\n    var onLoad = function onLoad() {\n      // Set 'new' state by default.\n      var state = STATE_NEW;\n\n      // If the browser can determine the naturalWidth\n      if (image.naturalWidth) {\n        state = STATE_LOADED;\n\n        resolve([image, state]);\n      }\n\n      // If the image is complete but the naturalWidth is 0px\n      if (image.complete) {\n        state = STATE_FAILED;\n\n        reject([image, state]);\n      }\n    };\n\n    var onError = function onError() {\n      reject([image, STATE_FAILED]);\n    };\n\n    // Register event listeners\n    image.addEventListener('load', onLoad);\n    image.addEventListener('error', onError);\n  });\n};\n\n/**\n * Preload images in browser.\n * Return Promise on loading images from String (URL) or HTMLImageElement object.\n * @param {String|HTMLImageElement} images Set of URL's or HTMLImageElement's.\n * @return {Promise}\n * @function\n * @example\n * import preload from '@bautrukevich/preload';\n *\n * let orImageWithSrc = new Image();\n * let orImageWithoutSrc = new Image(); // it's valid and you can set src later\n *\n * orImageWithSrc.src = '/url/path/to/image';\n *\n * const result = preload('/url/path/to/image', orImageWithSrc, orImageWithoutSrc)\n *  .then(resolved => {\n *    console.log(resolved);\n *  }, rejected => {\n *    console.log(rejected);\n *  });\n */\nfunction preload() {\n  for (var _len = arguments.length, images = Array(_len), _key = 0; _key < _len; _key++) {\n    images[_key] = arguments[_key];\n  }\n\n  if (images.length === 0) {\n    return Promise.reject(new Error(EMPTY_PARAMS_ERROR_MESSAGE));\n  }\n\n  if (images.length === 1) {\n    var image = checkAndPrepareImage(images[0]);\n\n    return Promise.all([preloadHTMLImageElement(image)]);\n  }\n\n  // Make preload for each image (string URL or HTMLImageElement)\n  var reflected = images.map(function (image) {\n    return preloadHTMLImageElement(checkAndPrepareImage(image));\n  });\n\n  return Promise.all(reflected);\n  // return Promise.all(reflected).then(results => {\n  //   const loaded = results.filter(image => image[1] !== STATE_FAILED);\n  //\n  //   if (loaded.length === results.length) {\n  //     return loaded;\n  //   }\n  //\n  //   return Promise.reject();\n  // });\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// preload.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0bd89aba2a6d302649b7","// Possible state for HTMLImageElement\nexport const STATE_NEW = 'new'; // for all new Image() without src\nexport const STATE_LOADED = 'loaded'; // for resolved and loaded images\nexport const STATE_FAILED = 'failed'; // for rejected images\n\n// Errors messages for pretty errors in runtime\nexport const EMPTY_PARAMS_ERROR_MESSAGE = `Empty params: \n  you can pass an image/images and it must be URL (string) or HTMLImageElement`;\nexport const TYPE_ERROR_MESSAGE = `Incorrect params: \n  image must be URL string or HTMLImageElement`;\n\n/**\n * Check type of image and prepare it if string.\n * @param {String|HTMLImageElement} image String(URL) or HTMLImageElement.\n * @return {HTMLImageElement}\n */\nconst checkAndPrepareImage = (image) => {\n  // Check for type errors\n  switch (typeof image) {\n    // Accept only HTMLImageElement interface\n    case 'object':\n      if (!(image instanceof HTMLImageElement)) {\n        Promise.reject(new TypeError(TYPE_ERROR_MESSAGE));\n      }\n      if (typeof image.src === 'undefined') {\n        image.src = '';\n      }\n      break;\n    // and string\n    case 'string':\n      let url = image;\n\n      // Create a new img from HTML5 constructor and set src\n      image = new Image();\n      image.src = url;\n      break;\n    // otherwise throw error\n    default:\n      Promise.reject(new TypeError(TYPE_ERROR_MESSAGE));\n  }\n\n  return image;\n};\n\n/**\n * Preload image.\n * @param {HTMLImageElement} image HTMLImageElement.\n * @return {Promise}\n */\nconst preloadHTMLImageElement = (image) => (\n  new Promise((resolve, reject) => {\n    // If image doesn't have src reject with 'new' state\n    if (image.src === '') {\n      reject([image, STATE_NEW]);\n    }\n\n    const onLoad = () => {\n      // Set 'new' state by default.\n      let state = STATE_NEW;\n\n      // If the browser can determine the naturalWidth\n      if (image.naturalWidth) {\n        state = STATE_LOADED;\n\n        resolve([image, state]);\n      }\n\n      // If the image is complete but the naturalWidth is 0px\n      if (image.complete) {\n        state = STATE_FAILED;\n\n        reject([image, state]);\n      }\n    };\n\n    const onError = () => {\n      reject([image, STATE_FAILED]);\n    };\n\n    // Register event listeners\n    image.addEventListener('load', onLoad);\n    image.addEventListener('error', onError);\n  })\n);\n\n/**\n * Preload images in browser.\n * Return Promise on loading images from String (URL) or HTMLImageElement object.\n * @param {String|HTMLImageElement} images Set of URL's or HTMLImageElement's.\n * @return {Promise}\n * @function\n * @example\n * import preload from '@bautrukevich/preload';\n *\n * let orImageWithSrc = new Image();\n * let orImageWithoutSrc = new Image(); // it's valid and you can set src later\n *\n * orImageWithSrc.src = '/url/path/to/image';\n *\n * const result = preload('/url/path/to/image', orImageWithSrc, orImageWithoutSrc)\n *  .then(resolved => {\n *    console.log(resolved);\n *  }, rejected => {\n *    console.log(rejected);\n *  });\n */\nexport default function preload(...images) {\n  if (images.length === 0) {\n    return Promise.reject(new Error(EMPTY_PARAMS_ERROR_MESSAGE));\n  }\n\n  if (images.length === 1) {\n    const image = checkAndPrepareImage(images[0]);\n\n    return Promise.all([\n      preloadHTMLImageElement(image)\n    ]);\n  }\n\n  // Make preload for each image (string URL or HTMLImageElement)\n  const reflected = images.map(image => (\n    preloadHTMLImageElement(\n      checkAndPrepareImage(image)\n    )\n  ));\n\n  return Promise.all(reflected);\n  // return Promise.all(reflected).then(results => {\n  //   const loaded = results.filter(image => image[1] !== STATE_FAILED);\n  //\n  //   if (loaded.length === results.length) {\n  //     return loaded;\n  //   }\n  //\n  //   return Promise.reject();\n  // });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}